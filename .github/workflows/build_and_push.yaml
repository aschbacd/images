name: Build and Push Docker Images

on:
  push:
    branches:
      - main

jobs:
  detect-changes-and-build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Find changed Dockerfiles in images/
        id: changed
        run: |
          set -e

          if git rev-parse --verify HEAD~1 >/dev/null 2>&1; then
            BEFORE_SHA=$(git rev-parse HEAD~1)
          else
            echo "No previous commit found. Skipping diff check."
            echo "dirs=" >> $GITHUB_OUTPUT
            exit 0
          fi

          AFTER_SHA=$(git rev-parse HEAD)

          CHANGED_DOCKERFILES=$(git diff --name-only "$BEFORE_SHA" "$AFTER_SHA" -- "images/**/Dockerfile" || true)

          if [ -z "$CHANGED_DOCKERFILES" ]; then
            echo "No Dockerfiles changed in images/."
            echo "dirs=" >> $GITHUB_OUTPUT
            exit 0
          fi

          UNIQUE_DIRS=$(echo "$CHANGED_DOCKERFILES" | xargs -n1 dirname | sort -u | paste -sd "," -)
          echo "Detected changed image folders: $UNIQUE_DIRS"
          echo "dirs=$UNIQUE_DIRS" >> $GITHUB_OUTPUT

      - name: Build and push images
        if: steps.changed.outputs.dirs != ''
        run: |
          set -e

          IFS=\",\" read -ra DIRS <<< "${{ steps.changed.outputs.dirs }}"

          for DIR in "${DIRS[@]}"; do
            NAME=$(basename "$DIR")

            echo "\nðŸ›  Building image: $NAME from $DIR"

            BASE_IMAGE=$(grep -i '^FROM' "$DIR/Dockerfile" | awk '{print $2}')
            BASE_VERSION=$(echo "$BASE_IMAGE" | cut -d":" -f2)

            VERSION_LINE=$(grep -i '^# VERSION=' "$DIR/Dockerfile" || true)
            VERSION=${VERSION_LINE/#\# VERSION=/}

            # Custom version increment logic
            INCREMENT=$(grep -i '^# VERSION_INCREMENT=' "$DIR/Dockerfile" || true)
            INCREMENT=${INCREMENT/#\# VERSION_INCREMENT=/}

            if [[ -z "$VERSION" ]]; then
              VERSION="$BASE_VERSION"
              echo "No custom VERSION specified. Using base image version: $VERSION"
            elif [[ -z "$INCREMENT" || "$INCREMENT" == "0" ]]; then
              echo "No custom increment specified. Using base version tag: $VERSION"
            else
              VERSION="$VERSION-$INCREMENT"
              echo "Custom version with increment: $VERSION"
            fi

            IMAGE_NAME="ghcr.io/${{ github.repository_owner }}/$NAME"

            docker build -t "$IMAGE_NAME:$VERSION" -t "$IMAGE_NAME:latest" "$DIR"
            docker push "$IMAGE_NAME:$VERSION"
            docker push "$IMAGE_NAME:latest"
          done
